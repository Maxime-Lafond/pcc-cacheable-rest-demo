/*
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *
 */

buildscript {
    ext {
        springBootVersion = '2.1.0.BUILD-SNAPSHOT'
    }
    repositories {
        mavenCentral()
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}
ext {
    version = '1.0.0.SNAPSHOT'
    gemfireVersion = '9.3.0'
    springGemFireVersion = '1.0.0.M1'
    javaxCacheVersion = '1.1.0'
}
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'pivotal.gemfire'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
    maven { url 'https://repo.spring.io/libs-milestone' }
    maven { url 'https://repo.spring.io/libs-release' }
}


dependencies {
    compile "io.pivotal.gemfire:geode-core:$gemfireVersion"
    compile "io.pivotal.gemfire:geode-cq:$gemfireVersion"
    compile "io.pivotal.gemfire:geode-common:$gemfireVersion"
    compile "io.pivotal.gemfire:geode-wan:$gemfireVersion"
    compile "io.pivotal.gemfire:geode-lucene:$gemfireVersion"
    compile "org.springframework.geode:spring-gemfire-starter:$springGemFireVersion"
    compile "org.springframework.boot:spring-boot-starter-web:$springBootVersion"
    compile "javax.cache:cache-api:$javaxCacheVersion"
}
configurations {
    compile.exclude(group: 'org.apache.logging.log4j', module: 'log4j-to-slf4j')
}
